[{"appId":"30ec10f4a43041e6a6198ba824311af2","iconUrl":null,"name":"car_networking_app","provider":"Company","type":"Video","shortDesc":"Desc","createTime":"2020-03-13 12:05:17.255272","details":"content","downloadCount":1,"affinity":"GPU","industry":"Smart Campus","contact":"xxx@xxx.xxx","score":5.0,"userId":"001","userName":"testuser001"},{"appId":"30ec10f4a43041e6a6198ba824311af3","iconUrl":null,"name":"AR","provider":"Company","type":"Video","shortDesc":"Desc","createTime":"2020-03-13 12:05:17.255272","details":"content","downloadCount":1,"affinity":"GPU","industry":"Smart Campus","contact":"xxx@xxx.xxx","score":5.0,"userId":"001","userName":"testuser001"},{"appId":"1fe696c29abb46fe93fb8233f0bc90a4","iconUrl":null,"name":"AR_app","provider":"Huawei","type":"Video","shortDesc":"Desc","createTime":"2020-09-10 10:08:56.916","details":"face_recognition_service\n===\n\nDescription\n===\n\nThis is an app application for face recognition microservices.The service was developed\non the basis of an open project for face recognition on github.The project is characterized\nby the following：\n\nRecognize and manipulate faces from Python or from the command line with the world's simplest face recognition library.\n\nBuilt using dlib's state-of-the-art face recognition built with deep learning. The model has an accuracy of 99.38% on\nthe Labeled Faces in the Wild benchmark.\n\nThis also provides a simple face_recognition command line tool that lets you do face recognition on a folder of images\nfrom the command line!\n\nThe face recognition microservices have the following features:face upload, face recognition, Video face recognition.\n\nFeatures\n===\nface upload\n------\nImport image files with only one face into the redis database and store them in mysql\nrestful API ：POST http://127.0.0.1:9999/upload\nSupport multiple image files to be simultaneously upload\n\nface recognition\n------\nEnter an image file with an unknown name and match the corresponding person name in the redis database\nrestful API ：POST http://127.0.0.1:9999/search_images\nThere can be multiple faces in the input image\n\nVideo face recognition\n--------\nGet the face video from the camera and find the name of the face in the database\nrestful API ：POST http://127.0.0.1:9999/search_video\n\nrefresh redis\n------\nRefresh the face image in mysql to the redis database\nrestfull API : POST http://127.0.1:9999/refresh_redis\n\nDeployment\n===\n\nPython 3.6  redis dlib face_recognition\ndocker docker-compose\nmacOS or Linux (Windows not officially supported, but might work)\nInstallation Options:(ubuntu18.04)\nThird party library:cmake dlib face_recognition flask redis opencv-python requests pymysql\n\nUsage\n===\nBuild a docker image:docker build . -t face_recognition\ndocker-compose.yml:docker-compose build\nPull service: docker-compose up -d\ntest :python3 test.py\n\nAPI\n==\nAPI Docs: https://face-recognition.readthedocs.io.\n\n","downloadCount":0,"affinity":"GPU","industry":"Smart Campus","contact":"xxx@xxx.xxx","score":5.0,"userId":"5abdd29d-b281-4f96-8339-b5621a67d217","userName":"username"}]
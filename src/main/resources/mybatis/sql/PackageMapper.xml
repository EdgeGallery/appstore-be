<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~    Copyright 2020-2021 Huawei Technologies Co., Ltd.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.edgegallery.appstore.infrastructure.persistence.apackage.PackageMapper">

    <select id="findReleaseById"
            resultType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo"
            parameterType="java.lang.String">
        select * from catalog_package_table where packageid = #{packageId}
    </select>

    <update id="updateRelease"
            parameterType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo">
        update catalog_package_table
        SET packageid        = #{packageId},
            packageAddress   = #{packageAddress},
            demoVideoAddress = #{demoVideoAddress},
            iconAddress      = #{iconAddress},
            size             = #{size},
            fileStructure    = #{fileStructure},
            createTime       = #{createTime},
            shortDesc        = #{shortDesc},
            showType         = #{showType},
            appName          = #{appName},
            version          = #{version},
            provider         = #{provider},
            applicationType  = #{applicationType},
            deployMode       = #{deployMode},
            markDownContent  = #{markDownContent},
            affinity         = #{affinity},
            industry         = #{industry},
            contact          = #{contact},
            appId            = #{appId},
            userId           = #{userId},
            userName         = #{userName},
            TESTTASKID       = #{testTaskId},
            status           = #{status},
        EXPERIENCEABLE = #{experienceAble}
        WHERE packageid = #{packageId}
    </update>

    <insert id="insertRelease"
            parameterType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo">
        insert into catalog_package_table
        (packageid, packageAddress, iconAddress, demoVideoAddress, size, fileStructure, CREATETIME, SHORTDESC, SHOWTYPE,
        appName, version, applicationType, deployMode, markdowncontent, affinity, industry, contact, appid, userid,
        username, TESTTASKID, STATUS, provider, EXPERIENCEABLE)
        VALUES (#{packageId}, #{packageAddress}, #{iconAddress}, #{demoVideoAddress}, #{size}, #{fileStructure},
        (select now()), #{shortDesc}, #{showType}, #{appName}, #{version}, #{applicationType}, #{deployMode},
        #{markDownContent}, #{affinity}, #{industry}, #{contact}, #{appId}, #{userId}, #{userName},
        #{testTaskId}, #{status}, #{provider}, #{experienceAble})
    </insert>

    <delete id="removeByPackageId" parameterType="String">
        delete from
        catalog_package_table
        where
        packageid=#{packageId}
    </delete>

    <delete id="removeReleasesByAppId" parameterType="String">
        delete from
        catalog_package_table
        where
        appid=#{appId}
    </delete>

    <select id="findAllByAppId" resultType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo">
        select
        *
        from
        catalog_package_table
        where
        appid=#{appId}
    </select>

    <select id="findAllWithPagination"
            resultType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo"
            parameterType="java.util.Map">
        select * from catalog_package_table where appid = #{appId} limit #{limit} offset #{offset}
    </select>

    <select id="countTotalForReleases" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        select count(*) FROM catalog_package_table where appid = #{appId} limit #{limit} offset
        #{offset}
    </select>

    <select id="findReleaseByUserIdV2"
            resultType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo"
            parameterType="java.util.Map">
        select * from catalog_package_table
        <where>
            <if test="userId != null  and userId != ''">
                userid = #{userId}
            </if>
            <if test="appName != null and appName != ''">
                and appname ilike '%' || #{appName} || '%'
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
        </where>
        <if test="sortType != null and sortItem != null">
            order by ${sortItem} ${sortType},${createTime} ${sortType}
        </if>
        limit #{limit} offset #{offset}
    </select>

    <update id="updateAppInstanceApp"
            parameterType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo">
        update catalog_package_table
        SET
        appinstanceid = #{appInstanceId},
        instancetenentid = #{instanceTenentId}
        <if test="instancePackageId != null  and instancePackageId != ''">
            ,instancepackageid = #{instancePackageId}
        </if>
        WHERE packageid = #{packageId}
    </update>

    <select id="findReleaseByUserId"
            resultType="org.edgegallery.appstore.infrastructure.persistence.apackage.AppReleasePo"
            parameterType="java.lang.String">
        select * from catalog_package_table where userid = #{userId}
    </select>

    <select id="countTotalForUserId" resultType="java.lang.Integer"
            parameterType="java.util.Map">
        select count(*) FROM catalog_package_table
        <where>
            <if test="userId != null  and userId != ''">
                userid = #{userId}
            </if>
            <if test="appName != null and appName != ''">
                and appname ilike '%' || #{appName} || '%'
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
        </where>
    </select>

</mapper>
